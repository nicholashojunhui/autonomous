
[Three Objectives]:

1. Firstly, activate the teleop node (OR RC100) controller and use the keys to remotely navigate the TB3 through the tunnel from the starting point to the desired destination AND orientation. You only can use the camera of the TB3 (in rqt_image_view) as your visual guide. Time yourself and reflect on the pros/cons of this method

2. Secondly, using the SLAM & NAVIGATION methods that we practiced previously, configure an autonomous vehicle that will automatically navigate itself within the tunnel from the starting point to the desired destination AND orientation. Use roslaunch and rospy to aid you in the navigation node (i.e. take reference from Project 3). Time yourself and reflect on the pros/cons of this method

3. Make a comparison between these 2 methods (with the help of the given comparison table)



[RECAP for Manual Driving]:

1. On the Remote PC, run roscore (Important: do NOT run roscore under the TB3 PC!!!)

$ roscore

2. On the Remote PC, open new terminal and type the following commands to access TB3 PC:

$ ssh ubuntu@192.168.XX.XX

You will see in this terminal that you are connected to the pi’s terminal

3. On the TB3 PC (using the linked pi terminal), type the following to bring up basic packages to start TB3:

$ roslaunch turtlebot3_bringup turtlebot3_robot.launch

4. On the Remote PC, open new terminal and type the following commands to access TB3 PC:

$ ssh ubuntu@192.168.XX.XX

5. Activate rpicamera

$ roslaunch turtlebot3_bringup turtlebot3_rpicamera.launch

6. To open up Image View, in new terminal (On the Remote PC), type

$ rqt_image_view

7. Select topic: /raspicam_node/image/compressed 

8a. Switch on the RC100 controller and start "driving"

OR

8b. To activate teleop node, in new terminal, type command:

$ roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch



[RECAP for Autonomous Driving]:

*Note that you need to perform SLAM first for this project to get map data

#############################################################
#################### For SLAM Operations ####################
#############################################################

You have to BRINGUP your TB3 first before you execute the SLAM nodes; 

1. On the Remote PC, run roscore (Important: do NOT run roscore under the TB3 PC!!!)

$ roscore

2. On the Remote PC, open new terminal and type the following commands to access TB3 PC:

$ ssh ubuntu@192.168.XX.XX

You will see in this terminal that you are connected to the pi’s terminal

3. On the TB3 PC (using the linked pi terminal), manually change the date and time to the correct one [SAME AS YOUR MACHINE; IMPORTANT for SLAM!] 

$ sudo date -s '202X-XX-XX XX:XX:00'

4. On the TB3 PC (using the linked pi terminal), type the following to bring up basic packages to start TB3:

$ roslaunch turtlebot3_bringup turtlebot3_robot.launch

5. On the Remote PC, open new terminal and type:

$ roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=gmapping

6. On the Remote PC, open new terminal and type the following to activate teleop node:

$ roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch

- Move the robot around to explore the area and collect map data

7. Once completed, on the Remote PC, open new terminal and type the following to save the map:

$ rosrun map_server map_saver -f ~/map

#############################################################
################# For NAVIGATION Operations #################
#############################################################

You have to BRINGUP your TB3 first before you launch the launch file, Project4.launch; 

1. On the Remote PC, run roscore (Important: do NOT run roscore under the TB3 PC!!!)

$ roscore

2. On the Remote PC, open new terminal and type the following commands to access TB3 PC:

$ ssh ubuntu@192.168.XX.XX

You will see in this terminal that you are connected to the pi’s terminal

3. On the TB3 PC (using the linked pi terminal), type the following to bring up basic packages to start TB3:

$ roslaunch turtlebot3_bringup turtlebot3_robot.launch

4. On the Remote PC, open new terminal and execute launch file to execute required tasks

$ roslaunch autonomous Project4.launch map_file:=$HOME/map.yaml

*** Meaning you are only required to type 1 command line to perform the given tasks

*ensure that your python codes are in the src folder of your autonomous package
*ensure that your launch files are in the launch folder of your autonomous package
*ensure you have given permissions to your python files (1. cd to directory; 2. chmod +x your_python_codes.py)






