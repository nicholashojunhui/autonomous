SLAM for TB3 (without Manipulator)

###############################################################
*** Switch on TB3 and activate Bringup first ***
###############################################################

1. On the Remote PC, run roscore (Important: do NOT run roscore under the TB3 PC!!!)

$ roscore

2. On the Remote PC, open new terminal and type the following commands to access TB3 PC:

$ ssh ubuntu@192.168.XX.XX

Password: turtlebot

You will see in this terminal that you are connected to the piâ€™s terminal

3a. Check if the time and date are synchronized. If NO, go to Step 3b. If YES, proceed to Step 4

$ sudo timedatectl

3b. On the TB3 PC (using the linked pi terminal), manually change the date and time to the correct one [SAME AS YOUR MACHINE; IMPORTANT for SLAM!] 

$ sudo date -s '202X-XX-XX XX:XX:00'

4. On the TB3 PC (using the linked pi terminal), type the following to bring up basic packages to start TB3:

$ roslaunch turtlebot3_bringup turtlebot3_robot.launch

5. Ensure TB3 has enough space to move around with ample walls/obstacles around

###############################################################
1. On the Remote PC, open new terminal and type:

$ roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=gmapping


2. On the Remote PC, open new terminal and type the following to activate teleop node:

$ roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch

- Move the robot around to explore the area and collect map data

3. On the Remote PC, open new terminal and type the following to save the map:

$ rosrun map_server map_saver -f ~/SLAM_EXAMPLE

###############################################################
###############################################################


NAVIGATION for TB3 (without Manipulator)

Close all SLAM nodes

(a) On the Remote PC, open new terminal and type:

$ roslaunch turtlebot3_navigation turtlebot3_navigation.launch map_file:=$HOME/SLAM_EXAMPLE.yaml

(b) Once RViz is launched, use the "2D Pose Estimate" button to estimate the initial pose
- You may want to try running the initial pose node that we tried in M5 (i.e. Auto initial pose based on /odom):

$ rosrun autonomous initial_pose2.py

(c) Use the "2D Nav Goal" button to move the TB3 to a desired position and orientation

###############################################################
